{"version":3,"sources":["components/Form.jsx","components/Task.jsx","components/TaskLists.jsx","components/FilterButton.jsx","App.jsx","index.jsx"],"names":["Form","props","useState","name","setName","useForm","register","handleSubmit","errors","formState","id","action","onSubmit","e","addTask","className","type","placeholder","value","required","onChange","target","onKeyDown","key","blur","htmlFor","Task","isEditing","setEditing","newName","setNewName","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","onClick","deleteTask","editTemplate","nameEdit","TasksLists","console","log","taskList","tasks","map","task","i","length","FilterButton","App","setTasks","newTask","nanoid","updatedTasks","filter","remainingTasks","editedTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ae03533.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form'\r\nconst Form = (props) => {\r\n    const [name, setName] = useState('');\r\n    const { register, handleSubmit, formState: { errors } } = useForm();//\r\n    const handleNewTask = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        // e.preventDefault();\r\n        props.addTask(name);\r\n        setName('');\r\n    }\r\n    \r\n    const handleKeyDown = (e) => {\r\n        if(e.key==='Enter'){\r\n            if(name){\r\n                props.addTask(name);\r\n                setName('')\r\n                e.target.blur();\r\n            }\r\n        }\r\n        // if (e.key === 'Enter') {\r\n        //     if (name) {\r\n        //         setName('');\r\n        //     }\r\n        // }\r\n    }\r\n    return (\r\n        <form id=\"form-add\" action=\"#\" onSubmit={handleSubmit(onSubmit)} >\r\n            <h1>hôm nay bạn có những việc gì ?</h1>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"input-new-task\"\r\n                    placeholder=\"Thêm nhiệm vụ ?\"\r\n                    className=\"form-field\"\r\n                    value={name}\r\n                    {...register(\"name\", {\r\n                        required: true\r\n                    })}\r\n                    onChange={handleNewTask}\r\n                    onKeyDown={handleKeyDown}\r\n                />\r\n                <label htmlFor=\"input-new-task\" className=\"form-label\">Thêm nhiệm vụ ?</label>\r\n                <button className=\"btn btn-dark\" id=\"btn-add\" type=\"submit\">Thêm</button>\r\n                <br />\r\n                {errors.name &&\r\n                    <span className=\"text-warning\">\r\n                        <i className=\"fas fa-exclamation-triangle\"></i>\r\n                        không thể thêm công việc rỗng\r\n                    </span>}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","\r\nimport { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nexport const Task = (props) => {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n  const { register, handleSubmit, formState: { errors } } = useForm()\r\n  const handleChange = (e) => {\r\n    setNewName(\r\n      e.target.value\r\n    );\r\n  }\r\n  const onSubmit = (e) => {\r\n    // e.preventDefault();\r\n    if (newName) {\r\n      props.editTask(props.id, newName);\r\n      setNewName('');\r\n      setEditing(false);\r\n    }\r\n  }\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (newName) {\r\n        onSubmit();\r\n      }\r\n    }\r\n  }\r\n\r\n  const viewTemplate = (<form>\r\n    <input\r\n      type=\"checkbox\"\r\n      id={props.id}\r\n      className=\"form-check-input\"\r\n      defaultChecked={props.completed}\r\n      onChange={() => props.toggleTaskCompleted(props.id)}\r\n    />\r\n    <label htmlFor={props.id} className=\"form-check-label\" id=\"task-label\">{props.name}</label>\r\n    <div className=\"contain-btn\">\r\n\r\n      <button className=\"btn btn-light btn-large\"\r\n        onClick={() => setEditing(true)}\r\n      >Sửa</button>\r\n      <button className=\"btn btn-danger btn-large\"\r\n        type=\"button\"\r\n        onClick={() => props.deleteTask(props.id)}\r\n      >Xóa</button>\r\n    </div>\r\n  </form>);\r\n\r\n  const editTemplate = (<form onSubmit={handleSubmit(onSubmit)} onKeyDown={handleKeyDown} >\r\n    <div className=\"form-group\" >\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-field\"\r\n        placeholder={`sửa nhiệm vụ: ${props.name}`}\r\n        {...register(\"nameEdit\", { required: true })}\r\n        id={props.id}\r\n        value={newName}\r\n        onChange={handleChange}\r\n      />\r\n      <label htmlFor={props.id} className=\"form-label\">sửa nhiệm vụ: {props.name}</label>\r\n      <br />\r\n      {errors.nameEdit && <span className=\"text-warning\">\r\n        <i className=\"fas fa-exclamation-triangle\"></i>\r\n        không thể thay \"{props.name}\" bằng công việc rỗng\r\n      </span>}\r\n    </div >\r\n    <div className=\"contain-btn\">\r\n      <button className=\"btn btn-dark btn-large\"\r\n        onClick={() => setEditing(false)}\r\n      >Hủy</button>\r\n      <button className=\"btn btn-success btn-large\"\r\n        type=\"submit\"\r\n      >Lưu</button>\r\n    </div>\r\n  </form>)\r\n\r\n  return <li className=\"task\" >{isEditing ? editTemplate : viewTemplate}</li>;\r\n};","import { Task } from './Task'\r\n\r\nconst TasksLists = (props) => {\r\n\r\n  console.log(props)\r\n  //sprint2--------------\r\n  // const taskList = props.tasks.filter(props.filterFunction[props.filter]).map(\r\n  //   (task, i) => <Task\r\n  //     id={task.id}\r\n  //     key={task.id}//không được sử dụng chỉ mục mảng(i) làm thuọc tính key, lấy id từ props\r\n  //     name={task.name}\r\n  //     completed={task.completed}\r\n  //     toggleTaskCompleted={props.toggleTaskCompleted}\r\n  //     deleteTask={props.deleteTask}\r\n  //     editTask={props.editTask}\r\n  //   />\r\n  // )\r\n  //-------------------------------\r\n\r\n  const taskList = props.tasks.map(\r\n    (task, i) => <Task\r\n      id={task.id}\r\n      key={task.id}//không được sử dụng chỉ mục mảng(i) làm thuọc tính key, lấy id từ props\r\n      name={task.name}\r\n      completed={task.completed}\r\n      toggleTaskCompleted={props.toggleTaskCompleted}\r\n      deleteTask={props.deleteTask}\r\n      editTask={props.editTask}\r\n    />\r\n  )\r\n  return (\r\n    <div id=\"task-list\">\r\n      {taskList.length > 0 ? <h2>Có {taskList.length} việc:</h2> : <h2>không có công việc nào.</h2>}\r\n      <ul>\r\n        {taskList}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default TasksLists;","const FilterButton = (props) => {\r\n    return (\r\n        <button className=\"btn btn-light\"\r\n            // aria-pressed={props.isPressed}\r\n            // onClick={()=>props.setFilter(props.name)} sprint2\r\n        >\r\n            <span>{props.name}</span>\r\n        </button>\r\n    );\r\n}\r\nexport default FilterButton;","// import './styles/App.scss';\nimport { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport { nanoid } from \"nanoid\";\nimport TasksLists from \"./components/TaskLists\";\nimport FilterButton from \"./components/FilterButton\";\nimport './styles/dist/App.css'\n\n\n// //sprint2------------\n// //hàm lọc\n// const FILTER_MAP = {\n//   \"Tất cả\": () => true,\n//   \"Chưa xong\": (task) => !task.completed,\n//   \"Đã xong\": (task) => task.completed,\n// }\n// //mảng tên filter\n// const FILTER_NAMES = Object.keys(FILTER_MAP);\n// //---------------------------\n\nconst App = (props) => {\n  const [tasks, setTasks] = useState(props.tasks);\n  // const [filter, setFilter] = useState('Tất cả'); //sprint2\n\n  const toggleTaskCompleted = (id) => {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed }\n      }\n      return task;\n    });\n    setTasks(updatedTasks)\n  }\n\n  const addTask = (name) => {\n    console.log(name)\n    const newTask = {\n      id: \"item-\" + nanoid(),\n      name: name,\n      completed: false\n    }\n\n    setTasks([...tasks, newTask]);\n  }\n  const deleteTask = (id) => {\n    console.log(id);\n    console.log(tasks.filter(task => task.id !== id))\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks)\n  }\n  const editTask = (id, newName) => {\n    const editedTask = tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    })\n    setTasks(editedTask);\n  }\n  // //sprint2--------------------------\n  //   const filterList = FILTER_NAMES.map(\n  //     name => <FilterButton key={name}\n  //       name={name}\n  //       isPressed={name === filter}\n  //       setFilter={setFilter}\n  //     />\n  //   );\n  // //---------------------------------\n\n  return (\n    <div className=\"App\">\n      <Form addTask={addTask} />\n      {/* {filterList} sprint2 the cho 3 cai duoi*/}\n      <FilterButton name=\"Tất cả\" />\n      <FilterButton name=\"Chưa xong\" />\n      <FilterButton name=\"Đã xong\" />\n      <TasksLists tasks={tasks}\n        // filter={filter} sprint2\n        // filterFunction={FILTER_MAP} sprint2\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst DATA=[{\n  id: \"item-0\",\n  name: \"ăn\",\n  completed: true,\n \n}, {\n  id: \"item-1\",\n  name: \"ngủ\",\n  completed: false,\n \n}, {\n  id: \"item-2\",\n  name: \"chơi game\",\n  completed: false,\n}];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}