{"version":3,"sources":["components/Form.jsx","components/Task.jsx","components/TaskLists.jsx","components/FilterButton.jsx","App.jsx","index.jsx"],"names":["Form","props","useState","name","setName","useForm","register","handleSubmit","errors","formState","console","log","isExitError","isExit","id","action","onSubmit","e","addTask","className","type","placeholder","value","required","onChange","target","onKeyDown","key","blur","htmlFor","Task","isEditing","setEditing","newName","setNewName","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","onClick","deleteTask","editTemplate","nameEdit","TasksLists","taskList","tasks","filter","filterFunction","map","task","i","length","FilterButton","isPressed","setFilter","FILTER_MAP","FILTER_NAMES","Object","keys","App","setTasks","error","setError","filterList","isExiting","forEach","newTask","nanoid","updatedTasks","remainingTasks","editedTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91731b98.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form'\r\nconst Form = (props) => {\r\n    const [name, setName] = useState('');\r\n    const { register, handleSubmit, formState: { errors } } = useForm();//\r\n\r\n    console.log(errors);\r\n    if(props.isExitError){\r\n        errors.isExit=props.isExitError;\r\n    }\r\n    const handleNewTask = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        // e.preventDefault();\r\n        props.addTask(name);\r\n        setName('');\r\n    }\r\n    \r\n    const handleKeyDown = (e) => {\r\n        if(e.key==='Enter'){\r\n            if(name){\r\n                props.addTask(name);\r\n                setName('')\r\n                e.target.blur();\r\n            }\r\n        }\r\n        // if (e.key === 'Enter') {\r\n        //     if (name) {\r\n        //         setName('');\r\n        //     }\r\n        // }\r\n    }\r\n    return (\r\n        <form id=\"form-add\" action=\"#\" onSubmit={handleSubmit(onSubmit)} >\r\n            <h1>hôm nay bạn có những việc gì ?</h1>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"input-new-task\"\r\n                    placeholder=\"Thêm nhiệm vụ ?\"\r\n                    className=\"form-field\"\r\n                    value={name}\r\n                    {...register(\"name\", {\r\n                        required: true\r\n                    })}\r\n                    onChange={handleNewTask}\r\n                    onKeyDown={handleKeyDown}\r\n                />\r\n                <label htmlFor=\"input-new-task\" className=\"form-label\">Thêm nhiệm vụ ?</label>\r\n                <button className=\"btn btn-dark\" id=\"btn-add\" type=\"submit\">Thêm</button>\r\n                <br />\r\n                {(errors.name||errors.isExit) &&\r\n                    <span className=\"text-warning\">\r\n                        <i className=\"fas fa-exclamation-triangle\"></i>\r\n                        không thể thêm công việc rỗng hoặc đã có\r\n                    </span>}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","\r\nimport { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nexport const Task = (props) => {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n  const { register, handleSubmit, formState: { errors } } = useForm()\r\n  const handleChange = (e) => {\r\n    setNewName(\r\n      e.target.value\r\n    );\r\n  }\r\n  const onSubmit = (e) => {\r\n    // e.preventDefault();\r\n    if (newName) {\r\n      props.editTask(props.id, newName);\r\n      setNewName('');\r\n      setEditing(false);\r\n    }\r\n  }\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (newName) {\r\n        onSubmit();\r\n      }\r\n    }\r\n  }\r\n\r\n  const viewTemplate = (<form>\r\n    <input\r\n      type=\"checkbox\"\r\n      id={props.id}\r\n      className=\"form-check-input\"\r\n      defaultChecked={props.completed}\r\n      onChange={() => props.toggleTaskCompleted(props.id)}\r\n    />\r\n    <label htmlFor={props.id} className=\"form-check-label\" id=\"task-label\">{props.name}</label>\r\n    <div className=\"contain-btn\">\r\n\r\n      <button className=\"btn btn-light btn-large\"\r\n        onClick={() => setEditing(true)}\r\n      >Sửa</button>\r\n      <button className=\"btn btn-danger btn-large\"\r\n        type=\"button\"\r\n        onClick={() => props.deleteTask(props.id)}\r\n      >Xóa</button>\r\n    </div>\r\n  </form>);\r\n\r\n  const editTemplate = (<form onSubmit={handleSubmit(onSubmit)} onKeyDown={handleKeyDown} >\r\n    <div className=\"form-group\" >\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-field\"\r\n        placeholder={`sửa nhiệm vụ: ${props.name}`}\r\n        {...register(\"nameEdit\", { required: true })}\r\n        id={props.id}\r\n        value={newName}\r\n        onChange={handleChange}\r\n      />\r\n      <label htmlFor={props.id} className=\"form-label\">sửa nhiệm vụ: {props.name}</label>\r\n      <br />\r\n      {errors.nameEdit && <span className=\"text-warning\">\r\n        <i className=\"fas fa-exclamation-triangle\"></i>\r\n        không thể thay \"{props.name}\" bằng công việc rỗng\r\n      </span>}\r\n    </div >\r\n    <div className=\"contain-btn\">\r\n      <button className=\"btn btn-dark btn-large\"\r\n        onClick={() => setEditing(false)}\r\n      >Hủy</button>\r\n      <button className=\"btn btn-success btn-large\"\r\n        type=\"submit\"\r\n      >Lưu</button>\r\n    </div>\r\n  </form>)\r\n\r\n  return <li className=\"task\" >{isEditing ? editTemplate : viewTemplate}</li>;\r\n};","import { Task } from './Task'\r\n\r\nconst TasksLists = (props) => {\r\n\r\n  console.log(props)\r\n  //sprint2--------------\r\n  const taskList = props.tasks.filter(props.filterFunction[props.filter]).map(\r\n    (task, i) => <Task\r\n      id={task.id}\r\n      key={task.id}//không được sử dụng chỉ mục mảng(i) làm thuọc tính key, lấy id từ props\r\n      name={task.name}\r\n      completed={task.completed}\r\n      toggleTaskCompleted={props.toggleTaskCompleted}\r\n      deleteTask={props.deleteTask}\r\n      editTask={props.editTask}\r\n    />\r\n  )\r\n  //-------------------------------\r\n  return (\r\n    <div id=\"task-list\">\r\n      {taskList.length > 0 ? <h2>Có {taskList.length} việc:</h2> : <h2>không có công việc nào.</h2>}\r\n      <ul>\r\n        {taskList}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default TasksLists;","const FilterButton = (props) => {\r\n    return (\r\n        <button className=\"btn btn-light\"\r\n            aria-pressed={props.isPressed}\r\n            onClick={() => props.setFilter(props.name)}\r\n        >\r\n            <span>{props.name}</span>\r\n        </button>\r\n    );\r\n}\r\nexport default FilterButton;","// import './styles/App.scss';\nimport { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport { nanoid } from \"nanoid\";\nimport TasksLists from \"./components/TaskLists\";\nimport FilterButton from \"./components/FilterButton\";\nimport './styles/dist/App.css'\n\n\n//sprint2------------\n//hàm lọc\nconst FILTER_MAP = {\n  \"Tất cả\": () => true,\n  \"Chưa xong\": (task) => !task.completed,\n  \"Đã xong\": (task) => task.completed,\n}\n//mảng tên filter\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n//---------------------------\n\nconst App = (props) => {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('Tất cả'); //sprint2\n  const [error, setError] = useState(false);\n\n  const toggleTaskCompleted = (id) => {\n\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed }\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  const addTask = (name) => {\n    console.log(name)\n    let isExiting = false;\n    tasks.forEach(task => {\n      if (task.name === name) {\n        isExiting = true;\n        setError(true);\n      }\n    });\n\n    if (!isExiting) {\n      const newTask = {\n        id: \"item-\" + nanoid(),\n        name: name,\n        completed: false\n      }\n\n      setTasks([...tasks, newTask]);\n    }\n  }\n  const deleteTask = (id) => {\n    console.log(id);\n    console.log(tasks.filter(task => task.id !== id))\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks)\n  }\n  const editTask = (id, newName) => {\n    const editedTask = tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    })\n    setTasks(editedTask);\n  }\n  //sprint2--------------------------\n  const filterList = FILTER_NAMES.map(\n    name => <FilterButton key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  );\n  //---------------------------------\n\n  return (\n    <div className=\"App\">\n      <Form addTask={addTask}\n      isExitError={error}\n       />\n      {filterList}\n      <TasksLists tasks={tasks}\n        filter={filter}\n        filterFunction={FILTER_MAP}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst DATA=[{\n  id: \"item-0\",\n  name: \"ăn\",\n  completed: true,\n \n}, {\n  id: \"item-1\",\n  name: \"ngủ\",\n  completed: false,\n \n}, {\n  id: \"item-2\",\n  name: \"chơi game\",\n  completed: false,\n}];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}